## Stack 2.60 (in local computer)
# using the program process_radtags
# this script will help you to demultiplex your sequence data
# clean your sequence data from low quality reads and adaptor contamination

# If you have 2 or more lanes of sequence data, you need to concatenated them into a single fastq.gz file
# Basic command where used in this part

$ cat {sequence.lane.1.fastq.txt.gz} {sequence.lane.2.fastq.txt.gz} > concatenated.lanes.fq.gz

# before running the process_radtags, you need the following:
# 1. your concatenated sequences in one directory(folder)
# 2. create a directory where you can output your demultiplexed data
# 3. you barcodes file
# > the barcodes file should have the individual barcodes in the first column and individual IDs in the second column delimited by tab (/t)
# example of a bracode file looks like this (without column names):

# GAACTATC  INDIV_1
# GAATCGAA  INDIV_2
# ATCTTGCG  INDIV_3

# R script to create a barcode file:

library(readr)
SQ1745 <- read_delim("01_raw/SQ1745/key/key.txt", 
                         delim = "\t", escape_double = FALSE, 
                         trim_ws = TRUE)

SQ1745_key <- subset(SQ1745, select=c("barcode", "uidtag"))
SQ1745_key
SQ1745_key <- unique(SQ1745_key)

write.table(SQ1745_key, file = "SQ1745_key.txt", append = FALSE, quote = F, sep = "\t",
            eol = "\n", na = "NA", dec = ".", row.names = F,
            col.names = F, qmethod = c("escape", "double"))


# 4. you should know the enzymes that were used to cut your DNA
# 5. all the commands that you will use

## running the process_radtags

# first try it with simple parameters

$ process_radtags -p 01_raw/SQ1742/Illumina/cat/ -o 03_raw_demultiplexed/ -b barcodefile.txt -e pstI -r -c -q

# you can look up the manual to know what are those commands do

# RUN 1
# demultiplexing trial with no adapter filter
# using only one enzyme

$ process_radtags -p 03_raw_cat/try/ -o ../02_clean/ -b 01_keys/SQ1745_key.txt -e pstI -r -c -q

# after running, there will be a process_radtags.log file inside the output directory
# it is important to check how process_radtags went after
# aside from the log file, you will also see some statistics in the terminal:

# results:
# 728826350 total sequences
# 42944821 barcode not found drops (5.9%)
#  1660759 low quality read drops (0.2%)
#  1854212 RAD cutsite not found drops (0.3%)
# 682366558 retained reads (93.6%)

# RUN 2
# using universal illumina adapters for adapter cleanup
# using 2 restriction enzymes

$ process_radtags -p 03_raw_cat/try/ -o ../03_clean/ -b 01_keys/SQ1745_key.txt --renz_1 pstI --renz_2 mspI -r -c -q --adapter_1 AGATCGGAAGAG

# results: 

# 728826350 total sequences
# 277056779 reads contained adapter sequence (37.9%) #removing reads with attached adapter sequences
# 66186288 barcode not found drops (9.1%)
#  1603974 low quality read drops (0.2%)
#  1877921 RAD cutsite not found drops (0.3%)
# 382101388 retained reads (52.3%)

# RUN 3 
# using pstI and mspI common (Forward) adapters
# using 2 restriction enzymes 

# results:
# 728826350 total sequences
# 277056779 reads contained adapter sequence (38.0%)
# 66186288 barcode not found drops (9.1%)
#  1603974 low quality read drops (0.2%)
#  1877921 RAD cutsite not found drops (0.3%)
# 382101388 retained reads (52.4%)

$ process_radtags -p 03_raw_cat/try/ -o ../04_clean/ -b 01_keys/SQ1745_key.txt --renz_1 pstI --renz_2 mspI -r -c -q --adapter_1 AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC --adapter_2 CGAGATCGGAAGAGCGGACTTTAAGC

## RUNNING fastqc

# install fastqc
$ sudo apt install fastqc
# check if you installed fastqc
$ fastqc
# if you are getting a java error, install Xming software

# running fastqc
$ fastqc /your/input/dir/*gz -o /your/output/dir
# points to check in the fastqc results:
# if you removed all you adapter contamination
# if all your sequences are at the same length because it is important in the Stacks pipeline

# RUN 4 (final trial run)
# use the illumina universal adapter 
# truncate reads at the size of 91bp

$ process_radtags -p 03_raw_cat/try/ -o ../05_clean/ -b 01_keys/SQ1745_key.txt --renz_1 pstI --renz_2 mspI -r -c -q --adapter_1 AGATCGGAAGAG -t 91
# results show about 35% retained reads (280M reads for each sequence data), about 30% dropped for low quality reads


## ACTUAL RUN
# run for evey sequence batch
# SQ1742
# SQ1743
# SQ1744
# SQ1745
# using different barcode files

$ process_radtags -p 03_raw_cat/SQ1743/ -o ../02_clean/SQ1743/ -b 01_keys/SQ1743_key.txt --renz_1 pstI --renz_2 mspI -r -c -q --adapter_1 AGATCGGAAGAG -t 91


### DENOVO MAP
# Optimizing parameter m in denovo_map.pl 
# using local computer

# before you start
$ cp denovo_map.pl from the installtion directory (scripts/denovo_map.pl) into the main installation directory (/mnt/c/Users/mendiomi/installation/stacks-2.60/)
# edit the file
$ nano deno_map.pl
# change the my $exe_path with the installation directory path
# my $dry_run      = false;
# my $exe_path     = "/mnt/c/Users/mendiomi/installation/stacks-2.60/;
# my $out_path     = "";

# now
# make directories from m1 to m10
$ mkdir -p m{1..10}

# running m for 1 to 10
$ for i in {1..10}; do denovo_map.pl --samples 02_clean/optimization_samples --popmap 02_clean/optimization_samples/popmap_optimization.txt -o 03_optimization/m$i -m $i -M 2 -n 2 -T 10; done
